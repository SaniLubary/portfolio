/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube009: THREE.SkinnedMesh
    Cube009_1: THREE.SkinnedMesh
    pantalla: THREE.SkinnedMesh
    BezierCurve008: THREE.SkinnedMesh
    BezierCurve009: THREE.SkinnedMesh
    BezierCurve010: THREE.SkinnedMesh
    BezierCurve011: THREE.SkinnedMesh
    cejas001: THREE.SkinnedMesh
    cuerpo002: THREE.SkinnedMesh
    cuerpo003: THREE.SkinnedMesh
    ojo_mini005: THREE.SkinnedMesh
    ojo_mini006: THREE.SkinnedMesh
    Cube006: THREE.SkinnedMesh
    Cube006_1: THREE.SkinnedMesh
    Cube003: THREE.Mesh
    Cube004: THREE.Mesh
    Bone: THREE.Bone
    mixamorigHips: THREE.Bone
  }
  materials: {
    ['Lowpoly_Body.001']: THREE.MeshStandardMaterial
    ['Lowpoly_Screen.001']: THREE.MeshStandardMaterial
    ['brillo azul.001']: THREE.MeshStandardMaterial
    ['pelo.001']: THREE.MeshStandardMaterial
    ojo: THREE.MeshStandardMaterial
    ['cuerpo.001']: THREE.MeshStandardMaterial
    remera: THREE.MeshStandardMaterial
    ['resalto.001']: THREE.MeshStandardMaterial
    cuerpo: THREE.MeshStandardMaterial
    boca: THREE.MeshStandardMaterial
    espora: THREE.MeshStandardMaterial
  }
}

type ActionName = 'Armature.003Action' | 'Armature.001Action.001'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export default function Model({ ...props }: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('src/assets/santi.glb') as GLTFResult

  // @ts-ignore
  const { actions } = useAnimations<GLTFActions>(animations, group)
  return (
    <group ref={group} {...props} dispose={null}>
      <group position={[3.25, 3.19, 18.16]} rotation={[1.39, 0.05, -0.24]}>
        <PerspectiveCamera makeDefault={false} far={1000} near={0.1} fov={22.9} rotation={[-Math.PI / 2, 0, 0]} />
      </group>
      <group position={[-3.62, -0.13, -1]} rotation={[-2.6, 0.33, 2.8]} scale={0.63}>
        <primitive object={nodes.Bone} />
        <skinnedMesh
          geometry={nodes.Cube009.geometry}
          material={materials['Lowpoly_Body.001']}
          skeleton={nodes.Cube009.skeleton}
        />
        <skinnedMesh
          geometry={nodes.Cube009_1.geometry}
          material={materials['Lowpoly_Screen.001']}
          skeleton={nodes.Cube009_1.skeleton}
        />
        <skinnedMesh
          geometry={nodes.pantalla.geometry}
          material={materials['brillo azul.001']}
          skeleton={nodes.pantalla.skeleton}
        />
      </group>
      <group position={[0, 4.05, 0]} />
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.01}>
        <primitive object={nodes.mixamorigHips} />
        <skinnedMesh
          geometry={nodes.BezierCurve008.geometry}
          material={nodes.BezierCurve008.material}
          skeleton={nodes.BezierCurve008.skeleton}
        />
        <skinnedMesh
          geometry={nodes.BezierCurve009.geometry}
          material={nodes.BezierCurve009.material}
          skeleton={nodes.BezierCurve009.skeleton}
        />
        <skinnedMesh
          geometry={nodes.BezierCurve010.geometry}
          material={nodes.BezierCurve010.material}
          skeleton={nodes.BezierCurve010.skeleton}
        />
        <skinnedMesh
          geometry={nodes.BezierCurve011.geometry}
          material={nodes.BezierCurve011.material}
          skeleton={nodes.BezierCurve011.skeleton}
        />
        <skinnedMesh
          geometry={nodes.cejas001.geometry}
          material={nodes.cejas001.material}
          skeleton={nodes.cejas001.skeleton}
        />
        <skinnedMesh
          geometry={nodes.cuerpo002.geometry}
          material={materials['cuerpo.001']}
          skeleton={nodes.cuerpo002.skeleton}
        />
        <skinnedMesh
          geometry={nodes.cuerpo003.geometry}
          material={materials.remera}
          skeleton={nodes.cuerpo003.skeleton}
        />
        <skinnedMesh
          geometry={nodes.ojo_mini005.geometry}
          material={nodes.ojo_mini005.material}
          skeleton={nodes.ojo_mini005.skeleton}
        />
        <skinnedMesh
          geometry={nodes.ojo_mini006.geometry}
          material={materials['resalto.001']}
          skeleton={nodes.ojo_mini006.skeleton}
        />
        <skinnedMesh
          name="Cube006"
          geometry={nodes.Cube006.geometry}
          material={materials.cuerpo}
          skeleton={nodes.Cube006.skeleton}
          morphTargetDictionary={nodes.Cube006.morphTargetDictionary}
          morphTargetInfluences={nodes.Cube006.morphTargetInfluences}
        />
        <skinnedMesh
          name="Cube006_1"
          geometry={nodes.Cube006_1.geometry}
          material={materials.boca}
          skeleton={nodes.Cube006_1.skeleton}
          morphTargetDictionary={nodes.Cube006_1.morphTargetDictionary}
          morphTargetInfluences={nodes.Cube006_1.morphTargetInfluences}
        />
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube003.geometry}
        material={materials.espora}
        position={[9.32, -1.29, 0.05]}
        rotation={[1.5, -0.01, 0.17]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Cube004.geometry}
        material={nodes.Cube004.material}
        scale={14.35}
      />
    </group>
  )
}

useGLTF.preload('/santi.glb')
